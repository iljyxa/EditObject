
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьСвязьПараметров = Ложь;
	
	Параметры.Свойство("Ссылка", Ссылка);
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		ВызватьИсключение "Не передана ссылка на объект";	
	КонецЕсли;
	
	РеквизитОбъект = Новый РеквизитФормы("Объект", ОписаниеТипаОбъекта(),,, Истина);
	
	ИзменитьРеквизиты(ЗначениеВМассиве(РеквизитОбъект));
	
	ЗначениеВРеквизитФормы(Ссылка.ПолучитьОбъект(), "Объект");
	
	СтруктураЭлементовФормы = ПолучитьСтруктуруЭлементовФормыПоМетаданным();
	СоздатьЭлементыФормы(СтруктураЭлементовФормы);
	
	УстановитьВидимостьКомандЗаписи();
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	ОчиститьСвязиПараметровВыбора();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать()
	ЗаписатьНаСервере();
	УстановитьЗаголовок();
	УстановитьВидимостьКомандЗаписи()
КонецПроцедуры

&НаКлиенте
Процедура Провести()
	ЗаписатьНаСервере(РежимЗаписиДокумента.Проведение);
	УстановитьЗаголовок();
	УстановитьВидимостьКомандЗаписи()
КонецПроцедуры 

&НаКлиенте
Процедура ОтменитьПроведение(Команда)
	ЗаписатьНаСервере(РежимЗаписиДокумента.ОтменаПроведения);
	УстановитьЗаголовок();
	УстановитьВидимостьКомандЗаписи()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовок()
	Заголовок = Строка(ЭтотОбъект.Объект.Ссылка);		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандЗаписи()
	
	МД = Ссылка.Метаданные();
	
	Если НЕ Метаданные.Документы.Содержит(МД) Тогда
		Элементы.ФормаПровести.Видимость = Ложь;
		Элементы.ФормаОтменитьПроведение.Видимость = Ложь;
	Иначе
		Элементы.ФормаЗаписать.Заголовок = "Записать (без перепроведения, даже если проведен)";
		Элементы.ФормаОтменитьПроведение.Доступность = Ссылка.Проведен;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере(РежимЗаписиДокумента = Неопределено)
	
	ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ОтключитьМеханизмРегистрацииОбъектов Тогда
		ЗначениеОбъект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);	
	КонецЕсли;
	
	Если ЗначениеОбъект.ОбменДанными.Загрузка <> ОбменДаннымиЗагрузка Тогда
		ЗначениеОбъект.ОбменДанными.Загрузка = ОбменДаннымиЗагрузка;	
	КонецЕсли; 

	Если РежимЗаписиДокумента = Неопределено Тогда
		ЗначениеОбъект.Записать();
	Иначе
		ЗначениеОбъект.Записать(РежимЗаписиДокумента);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ЗначениеОбъект, "Объект");
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ОписаниеТипаОбъекта()
	
	Мета = Ссылка.Метаданные();
	
	Если Метаданные.Справочники.Содержит(Мета) Тогда
		ИмяМетаданных = "СправочникОбъект";
	ИначеЕсли Метаданные.Документы.Содержит(Мета) Тогда
		ИмяМетаданных = "ДокументОбъект";
	ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(Мета) Тогда
		ИмяМетаданных = "ПланВидовРасчетаОбъект";
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(Мета) Тогда
		ИмяМетаданных = "ПланВидовХарактеристикОбъект";
	ИначеЕсли Метаданные.ПланыСчетов.Содержит(Мета) Тогда
		ИмяМетаданных = "ПланСчетовОбъект";
	ИначеЕсли Метаданные.Задачи.Содержит(Мета) Тогда
		ИмяМетаданных = "ЗадачаОбъект";
	Иначе
		ВызватьИсключение "Тип " + Мета.Имя + " не поддерживается";
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов(ИмяМетаданных + "." + Мета.Имя);
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруЭлементовФормыПоМетаданным()
	
	СтруктураЭлементовФормы = Новый Массив;
	
	Мета = Ссылка.Метаданные();
	
	Если ЕстьРеквизитИлиСвойствоОбъекта(Мета, "РеквизитыАдресации") Тогда
		Для каждого ОписаниеРеквизитаАдресации Из Мета.РеквизитыАдресации Цикл
			ДобавитьПолеВвода(СтруктураЭлементовФормы, ОписаниеРеквизитаАдресации,, "РеквизитыАдресации");
		КонецЦикла;	
	КонецЕсли;
	
	Если ЕстьРеквизитИлиСвойствоОбъекта(Мета, "СтандартныеРеквизиты") Тогда
		Для каждого ОписаниеСтандартногоРеквизита Из Мета.СтандартныеРеквизиты Цикл
			ДобавитьПолеВвода(СтруктураЭлементовФормы, ОписаниеСтандартногоРеквизита,, "СтандартныеРеквизиты");
		КонецЦикла;	
	КонецЕсли; 
	
	Если ЕстьРеквизитИлиСвойствоОбъекта(Мета, "Реквизиты") Тогда
		Для каждого ОписаниеРеквизита Из Мета.Реквизиты Цикл
			ДобавитьПолеВвода(СтруктураЭлементовФормы, ОписаниеРеквизита,, "Реквизиты");
		КонецЦикла;	
	КонецЕсли;
	
	Если ЕстьРеквизитИлиСвойствоОбъекта(Мета, "ТабличныеЧасти") Тогда
		Для каждого ОписаниеТабличнойЧасти Из Мета.ТабличныеЧасти Цикл
			ДобавитьТаблицуЗначений(СтруктураЭлементовФормы, ОписаниеТабличнойЧасти,, "ТабличныеЧасти");
		КонецЦикла;	
	КонецЕсли; 	
	 
	Если ЕстьРеквизитИлиСвойствоОбъекта(Мета, "СтандартныеТабличныеЧасти") Тогда
		Для каждого ОписаниеСтандартнойТабличнойЧасти Из Мета.СтандартныеТабличныеЧасти Цикл
			ДобавитьТаблицуЗначений(СтруктураЭлементовФормы, ОписаниеСтандартнойТабличнойЧасти,, "СтандартныеТабличныеЧасти");		
		КонецЦикла;	
	КонецЕсли; 
	
	Возврат СтруктураЭлементовФормы;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьПолеВвода(СтруктураМетаданных, ОбъектМетаданных, НачальныйПутьКДанным = "Объект", Группа = "")
	
	Если ОбъектМетаданных.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда // Недоступен для отображения на форме
		Возврат	
	КонецЕсли;
	
	ОписаниеЭлементаФормы = Новый Структура;
	
	Если ОбъектМетаданных.Тип = Новый ОписаниеТипов("Булево") Тогда
		ОписаниеЭлементаФормы.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
	Иначе
		ОписаниеЭлементаФормы.Вставить("Вид", ВидПоляФормы.ПолеВвода);
	КонецЕсли; 
	
	ОписаниеЭлементаФормы.Вставить("Заголовок", ?(ЗначениеЗаполнено(ОбъектМетаданных.Синоним), ОбъектМетаданных.Синоним, СинонимРеквизитаПоИмени(ОбъектМетаданных.Имя)));
	ОписаниеЭлементаФормы.Вставить("Подсказка", ОбъектМетаданных.Имя);
	ОписаниеЭлементаФормы.Вставить("ОтображениеПодсказки", ОтображениеПодсказки.Кнопка);
	ОписаниеЭлементаФормы.Вставить("ПутьКДанным", НачальныйПутьКДанным + "." + ОбъектМетаданных.Имя);
	ОписаниеЭлементаФормы.Вставить("Имя", ОбъектМетаданных.Имя);
	ОписаниеЭлементаФормы.Вставить("Тип", Тип("ПолеФормы"));
	ОписаниеЭлементаФормы.Вставить("ТипМетаданных", ТипЗнч(ОбъектМетаданных));
	ОписаниеЭлементаФормы.Вставить("Группа", Группа);
	
	СтруктураМетаданных.Добавить(ОписаниеЭлементаФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьТаблицуЗначений(СтруктураМетаданных, ОбъектМетаданных, НачальныйПутьКДанным = "Объект", Группа = "")
	
	ОписаниеЭлементаФормы = Новый Структура;
	ОписаниеЭлементаФормы.Вставить("Заголовок", ?(ЗначениеЗаполнено(ОбъектМетаданных.Синоним), ОбъектМетаданных.Синоним, СинонимРеквизитаПоИмени(ОбъектМетаданных.Имя)));
	ОписаниеЭлементаФормы.Вставить("ПутьКДанным", НачальныйПутьКДанным + "." + ОбъектМетаданных.Имя);
	ОписаниеЭлементаФормы.Вставить("Имя", ОбъектМетаданных.Имя);
	ОписаниеЭлементаФормы.Вставить("Подсказка", ?(ЗначениеЗаполнено(ОбъектМетаданных.Синоним), ОбъектМетаданных.Имя, ""));
	ОписаниеЭлементаФормы.Вставить("Тип", Тип("ТаблицаФормы"));
	ОписаниеЭлементаФормы.Вставить("Колонки", Новый Массив);
	ОписаниеЭлементаФормы.Вставить("ТипМетаданных", ТипЗнч(ОбъектМетаданных));
	ОписаниеЭлементаФормы.Вставить("Группа", Группа);
	
	Если ЕстьРеквизитИлиСвойствоОбъекта(ОбъектМетаданных, "СтандартныеРеквизиты") Тогда
		Для каждого ОписаниеСтандартногоРеквизитаТабличнойЧасти Из ОбъектМетаданных.СтандартныеРеквизиты Цикл
			ДобавитьПолеВвода(ОписаниеЭлементаФормы.Колонки, ОписаниеСтандартногоРеквизитаТабличнойЧасти, НачальныйПутьКДанным + "." + ОбъектМетаданных.Имя, Группа);		
		КонецЦикла;	
	КонецЕсли; 
	
	Если ЕстьРеквизитИлиСвойствоОбъекта(ОбъектМетаданных, "Реквизиты") Тогда
		Для каждого ОписаниеРеквизитаТабличнойЧасти Из ОбъектМетаданных.Реквизиты Цикл
			ДобавитьПолеВвода(ОписаниеЭлементаФормы.Колонки, ОписаниеРеквизитаТабличнойЧасти, НачальныйПутьКДанным + "." + ОбъектМетаданных.Имя, Группа);		
		КонецЦикла;	
	КонецЕсли; 
	
	СтруктураМетаданных.Добавить(ОписаниеЭлементаФормы);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыФормы(СтруктураЭлементовФормы)
	
	ТипПолеФормы = Тип("ПолеФормы");
	ТипТаблицаФормы = Тип("ТаблицаФормы");
	
	СозданоСтраницТабличныхЧастей = 0;
	СозданоСтраницСтандартныхТабличныхЧастей = 0;
	СозданоСтандартныхРеквизитов = 0;
	СозданоРеквизитов = 0;
	
	КоличествоСтандартныхРеквизитов = 0;
	КоличествоРеквизитов = 0;
	
	Для каждого ОписаниеЭлементаФормы Из СтруктураЭлементовФормы Цикл
		Если ОписаниеЭлементаФормы.Группа = "СтандартныеРеквизиты" Тогда
			КоличествоСтандартныхРеквизитов = КоличествоСтандартныхРеквизитов + 1;
		ИначеЕсли ОписаниеЭлементаФормы.Группа = "Реквизиты" Тогда
			КоличествоРеквизитов = КоличествоРеквизитов + 1;
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого ОписаниеЭлементаФормы Из СтруктураЭлементовФормы Цикл
		Если ОписаниеЭлементаФормы.Группа = "СтандартныеРеквизиты" Тогда
			Группа = Элементы["ГруппаСтандартныеРеквизиты" + НомерГруппыРеквизитов(СозданоСтандартныхРеквизитов, КоличествоСтандартныхРеквизитов)];
			СозданоСтандартныхРеквизитов = СозданоСтандартныхРеквизитов + 1;
		ИначеЕсли ОписаниеЭлементаФормы.Группа = "Реквизиты" Тогда
			Группа = Элементы["ГруппаРеквизиты" + НомерГруппыРеквизитов(СозданоРеквизитов, КоличествоРеквизитов)];
			СозданоРеквизитов = СозданоРеквизитов + 1;
		ИначеЕсли ОписаниеЭлементаФормы.Группа = "ТабличныеЧасти" Тогда 
			Группа = Элементы["СтраницыТабличныеЧасти" + НомерГруппыТабличнойЧасти(СозданоСтраницТабличныхЧастей)];
			СозданоСтраницТабличныхЧастей = СозданоСтраницТабличныхЧастей + 1;
		ИначеЕсли ОписаниеЭлементаФормы.Группа = "СтандартныеТабличныеЧасти" Тогда
			Группа = Элементы["СтраницыСтандартныеТабличныеЧасти" + НомерГруппыТабличнойЧасти(СозданоСтраницСтандартныхТабличныхЧастей)];
			СозданоСтраницСтандартныхТабличныхЧастей = СозданоСтраницСтандартныхТабличныхЧастей + 1;
		КонецЕсли;
		
		// Создадим страницу
		Если ОписаниеЭлементаФормы.Тип = ТипТаблицаФормы Тогда
			Группа = Элементы.Добавить("Страница" + ОписаниеЭлементаФормы.Имя, Тип("ГруппаФормы"), Группа);
			Группа.Заголовок = ОписаниеЭлементаФормы.Заголовок;
			Группа.Вид = ВидГруппыФормы.Страница;
		КонецЕсли; 
		
		Элемент = Элементы.Добавить(ОписаниеЭлементаФормы.Имя, ОписаниеЭлементаФормы.Тип, Группа);
		ЗаполнитьЗначенияСвойств(Элемент, ОписаниеЭлементаФормы);
		
		Если ОписаниеЭлементаФормы.Тип = Тип("ПолеФормы") И Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
			Элемент.УстановитьДействие("ОбработкаВыбора", "ОбработкаВыбора");	
		КонецЕсли;	
		
		Если ОписаниеЭлементаФормы.Тип = ТипТаблицаФормы Тогда
			Для каждого ОписаниеКолонкиТаблицы Из ОписаниеЭлементаФормы.Колонки Цикл
				Колонка = Элементы.Добавить(ОписаниеЭлементаФормы.Имя + ОписаниеКолонкиТаблицы.Имя, ОписаниеКолонкиТаблицы.Тип, Элемент);
				ЗаполнитьЗначенияСвойств(Колонка, ОписаниеКолонкиТаблицы);
				
				Если ОписаниеКолонкиТаблицы.Тип = Тип("ПолеФормы") И Колонка.Вид = ВидПоляФормы.ПолеВвода Тогда
					Колонка.УстановитьДействие("ОбработкаВыбора", "ОбработкаВыбора");	
				КонецЕсли;
			КонецЦикла; 	
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеВМассиве(Значение)
	
	Массив = Новый Массив;
	Массив.Добавить(Значение);
	
	Возврат Массив;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьРеквизитИлиСвойствоОбъекта(Объект, ИмяРеквизита) Экспорт
	
	КлючУникальности   = Новый УникальныйИдентификатор;
	СтруктураРеквизита = Новый Структура(ИмяРеквизита, КлючУникальности);
	ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Объект);
	
	Возврат СтруктураРеквизита[ИмяРеквизита] <> КлючУникальности;
	
КонецФункции

&НаСервереБезКонтекста
Функция НомерГруппыТабличнойЧасти(СозданоСтраницТабличныхЧастей)
	
	КоличествоСтраницДляПереходаВСледующуюГруппу = 10;
	ИндексПервойГруппы = 1;
	
	Возврат Формат(Цел(СозданоСтраницТабличныхЧастей / КоличествоСтраницДляПереходаВСледующуюГруппу) + ИндексПервойГруппы, "ЧГ=");
	
КонецФункции

&НаСервереБезКонтекста
Функция НомерГруппыРеквизитов(СозданоРеквизитов, КоличествоРеквизитов)
	
	Если КоличествоРеквизитов < 8 Тогда
		Возврат "1";	
	КонецЕсли; 
	
	Отношение = СозданоРеквизитов / КоличествоРеквизитов;
	
	Возврат ?(Отношение > 0.5, "2", "1");
	
КонецФункции

&НаСервереБезКонтекста
Функция СинонимРеквизитаПоИмени(Знач ИмяРеквизита)
	
	Перем МаленькиеБуквы, Буква, Ответ, сч, ПредыдущаяБуква, СледующаяБуква;
	
	ИмяРеквизита = СокрЛП(ИмяРеквизита);
	
	МаленькиеБуквы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя_";
	
	Буква = Лев(ИмяРеквизита, 1);
	
	Ответ = "" + Буква;
	
	Для сч=2 По СтрДлина(ИмяРеквизита) Цикл
        ПредыдущаяБуква = Буква;
        Буква = Сред(ИмяРеквизита, сч, 1);
        Если (Найти(МаленькиеБуквы, Буква)=0) и (Найти(МаленькиеБуквы, ПредыдущаяБуква)>0) Тогда
            СледующаяБуква = Сред(ИмяРеквизита, сч+1, 1);
            Если (СледующаяБуква<>"") и (Найти(МаленькиеБуквы, СледующаяБуква)>0) Тогда
                Буква = НРег(Буква);
            КонецЕсли;
            Буква = " "+Буква;
        КонецЕсли;
        Ответ = Ответ + Буква;
	КонецЦикла;
	
    Возврат СтрЗаменить(Ответ, "_", " ");
	
КонецФункции

&НаКлиенте
Процедура ПараметрыЗаписи(Команда)
	
	ПараметрыФормы = Новый Структура("ОбменДаннымиЗагрузка,ОтключитьМеханизмРегистрацииОбъектов");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, ЭтотОбъект);
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПараметрыЗаписиЗавершение", ЭтотОбъект);
	ОткрытьФорму("ВнешняяОбработка.РедактированиеОбъекта.Форма.ПараметрыЗаписи", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаписиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Если вдруг потребуется		
КонецПроцедуры

&НаСервере
Процедура ОчиститьСвязиПараметровВыбора()
	
	Если НЕ ИспользоватьСвязьПараметров Тогда
		Для каждого Элемент Из Элементы Цикл
			Если ТипЗнч(Элемент) = Тип("ПолеФормы") И Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
				Элемент.СвязиПараметровВыбора = Новый ФиксированныйМассив(Новый Массив);
				Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти